#user root;
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	upstream loadblance { 
		ip_hash; 
		#这里指定多个源服务器，ip:端口,80端口的话可写可不写 
		server 192.168.16.211:8082 weight=1; 
		server 192.168.16.211:8081 weight=1; 
	} 
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;
    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types       text/plain application/x-javascript text/css application/xml;
    gzip_vary on;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  192.168.16.211;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
         #   root   html;
          #  index  index.html index.htm;
        #}
	
		location 
		/
		#~ .*\.(js|css|gif|jpg|jpeg|png|bmp|flv|ico|swf)$
		{
			root html;
			#D:\apache-tomcat-7.0.52\webapps\CLS; 
			index index.html index.htm index.aspx; 
			proxy_redirect off; 
			#保留用户真实信息 
			proxy_set_header Host $host; 
			proxy_set_header X-Real-IP $remote_addr; 
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
			#允许客户端请求的最大单个文件字节数 
			client_max_body_size 10m; 
			#缓冲区代理缓冲用户端请求的最大字节数，可以理解为先保存到本地再传给用户 
			client_body_buffer_size 128k; 
			#跟后端服务器连接超时时间 发起握手等候响应超时时间 
			proxy_connect_timeout 12; 
			#连接成功后 等待后端服务器响应时间 其实已进入后端的排队之中等候处理 
			proxy_read_timeout 90; 
			#后端服务器数据回传时间 就是在规定时间内后端服务器必须传完所有数据 
			proxy_send_timeout 90; 
			#代理请求缓存区 这个缓存区间会保存用户的头信息一共Nginx进行规则处理 一般只要能保存下头信息即可 
			proxy_buffer_size 4k; 
			#同上 告诉Nginx保存单个用的几个Buffer最大用多大空间 
			proxy_buffers 4 32k; 
			#如果系统很忙的时候可以申请国内各大的proxy_buffers 官方推荐 *2 
			proxy_busy_buffers_size 64k; 
			#proxy 缓存临时文件的大小 
			proxy_temp_file_write_size 64k; 
			proxy_next_upstream error timeout invalid_header http_500 http_503 http_404; 
			proxy_max_temp_file_size 128m; 
			proxy_pass http://loadblance;
			#http://192.168.16.221:8087;
			proxy_redirect default;
		}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
